from quart import Quart, request
import os
import pandas as pd
import yfinance as yf

app = Quart(__name__)

stock_counter = {}  # here key is symbol name and value is index as counter
stock_df = {}  # here key is symbol name and value is one day price data
DATA_FROM_FILE = False
date = "2023-11-16"

stocks_list = ['ABCAPITAL', 'ABFRL', 'ADANIPOWER', 'APTUS', 'ASHOKLEY', 'AWL', 'BANDHANBNK', 'BANKBARODA', 'BANKINDIA', 'BEL', 'BHEL', 'BIOCON', 'BPCL', 'CAMPUS', 'CANBK', 'CENTRALBK', 'CGPOWER', 'CHAMBLFERT', 'COALINDIA', 'CROMPTON', 'CUB', 'DEVYANI', 'EXIDEIND', 'FEDERALBNK', 'FORTIS', 'GAIL', 'GICRE', 'GMRINFRA', 'GSPL', 'HINDPETRO', 'HINDZINC', 'IDBI', 'IDEA', 'IDFC', 'IDFCFIRSTB', 'IGL', 'INDUSTOWER', 'IOB', 'IOC', 'IRB', 'IRFC', 'JSWENERGY', 'KALYANKJIL', 'KANSAINER', 'KIOCL', 'L&TFH', 'LAURUSLABS', 'M&MFIN', 'MAHABANK', 'MOTHERSON', 'MSUMI', 'NATIONALUM', 'NHPC', 'NIACL', 'NMDC', 'NTPC', 'NUVOCO', 'NYKAA', 'OIL', 'ONGC', 'PETRONET', 'PFC', 'PNB', 'POONAWALLA', 'POWERGRID', 'PPLPHARMA', 'PSB', 'RECLTD', 'REDINGTON', 'RVNL', 'SAIL', 'SJVN', 'SUMICHEM', 'TATAPOWER', 'TATASTEEL', 'TRIDENT', 'TTML', 'UCOBANK', 'UNIONBANK', 'VEDL', 'WIPRO', 'YESBANK', 'ZEEL', 'ZOMATO', 'AEGISCHEM', 'ALLCARGO', 'ALOKINDS', 'ANANTRAJ', 'ARVINDFASN', 'ASTERDM', 'BCG', 'BLS', 'CASTROLIND', 'CESC', 'CMSINFO', 'CSBBANK', 'DCBBANK', 'DELTACORP', 'DISHTV', 'EASEMYTRIP', 'EDELWEISS', 'EIHOTEL', 'ENGINERSIN', 'EPL', 'EQUITASBNK', 'FDC', 'FINPIPE', 'FSL', 'GAEL', 'GATEWAY', 'GMDCLTD', 'GPPL', 'GRANULES', 'GREENPANEL', 'GSFC', 'HARSHA', 'HCG', 'HEIDELBERG', 'HFCL', 'HIKAL', 'HINDCOPPER', 'HSCL', 'HUDCO', 'IBREALEST', 'IBULHSGFIN', 'IEX', 'INDIACEM', 'INDOCO', 'INFIBEAM', 'IRCON', 'ITI', 'J&KBANK', 'JAMNAAUTO', 'JINDWORLD', 'JKPAPER', 'JKTYRE', 'JMFINANCIL', 'JPPOWER', 'JTEKTINDIA', 'JWL', 'KARURVYSYA', 'KNRCON', 'KRBL', 'KTKBANK', 'LEMONTREE', 'LXCHEM', 'MAHLOG', 'MANAPPURAM', 'MIDHANI', 'MINDACORP', 'MMTC', 'MRPL', 'NBCC', 'NCC', 'NETWORK18', 'NFL', 'NIITLTD', 'NLCINDIA', 'NOCIL', 'ORIENTELEC', 'PAISALO', 'PARADEEP', 'PCBL', 'PCJEWELLER', 'PNCINFRA', 'PRSMJOHNSN', 'RAILTEL', 'RAIN', 'RALLIS', 'RBA', 'RBLBANK', 'RCF', 'RELIGARE', 'RELINFRA', 'RENUKA', 'RPOWER', 'RTNINDIA', 'SARDAEN', 'SAREGAMA', 'SCHNEIDER', 'SCI', 'SOUTHBANK', 'SPARC', 'STARCEMENT', 'STLTECH', 'SUPRAJIT', 'SWSOLAR', 'TATACOFFEE', 'TINPLATE', 'TRITURBINE', 'TRIVENI', 'TV18BRDCST', 'UJJIVANSFB', 'USHAMART', 'VGUARD', 'VTL', 'WELSPUNIND', 'ADFFOODS', 'ADVENZYMES', 'ALEMBICLTD', 'ANDHRSUGAR', 'APTECHT', 'ARVIND', 'ARVSMART', 'ASHIANA', 'ASHOKA', 'AVTNPL', 'BAJAJCON', 'BAJAJHIND', 'BALMLAWRIE', 'BEPL', 'BOMDYEING', 'BSHSL', 'CAMLINFINE', 'CANTABIL', 'CONFIPET', 'DBCORP', 'DBL', 'DBOL', 'DBREALTY', 'DCAL', 'DCW', 'DCXINDIA', 'DEN', 'DHAMPURSUG', 'DHANI', 'DWARKESH', 'ELECTCAST', 'EMIL', 'EVEREADY', 'FCL', 'FILATEX', 'FINOPB', 'FMGOETZE', 'GABRIEL', 'GALLANTT', 'GANESHHOUC', 'GATI', 'GENESYS', 'GENUSPOWER', 'GMRP&UI', 'GOKULAGRO', 'GOLDIAM', 'GREAVESCOT', 'GREENPLY', 'GRMOVER', 'GTLINFRA', 'GTPL', 'GUFICBIO', 'HATHWAY', 'HBLPOWER', 'HCC', 'HEMIPROP', 'HERANBA', 'HERITGFOOD', 'HINDOILEXP', 'HUHTAMAKI', 'ICIL', 'IFCI', 'IIFLSEC', 'IMAGICAA', 'INDORAMA', 'INOXGREEN', 'INOXWIND', 'IPL', 'ISMTLTD', 'ITDCEM', 'JAGRAN', 'JAICORPLTD', 'JAYNECOIND', 'JISLJALEQS', 'JPASSOCIAT', 'KCP', 'KESORAMIND', 'KIRIINDUS', 'LUMAXTECH', 'MANALIPETC', 'MANINFRA', 'MARKSANS', 'MBAPL', 'MIRZAINT', 'MOIL', 'MOL', 'MOREPENLAB', 'MTNL', 'MUKANDLTD', 'NACLIND', 'NAVNETEDUL', 'NDTV', 'NRBBEARING', 'OAL', 'OMAXE', 'OPTIEMUS', 'ORIENTCEM', 'PANAMAPET', 'PFOCUS', 'PRICOLLTD', 'PTC', 'PURVA', 'RAMASTEEL', 'RAMCOIND', 'RESPONIND', 'RTNPOWER', 'RUPA', 'SAGCEM', 'SALASAR', 'SANGHIIND', 'SEPC', 'SEQUENT', 'SESHAPAPER', 'SHALBY', 'SHILPAMED', 'SHK', 'SIRCA', 'SOLARA', 'SOTL', 'SPCENET', 'SPIC', 'SSWL', 'SUBEXLTD', 'SUBROS', 'SUNDARMHLD', 'SUNFLAG', 'SUPRIYA', 'SUVEN', 'TCNSBRANDS', 'TDPOWERSYS', 'TEXRAIL', 'THOMASCOOK', 'TI', 'TIMETECHNO', 'TIPSINDLTD', 'TIRUMALCHM', 'TNPL', 'TVTODAY', 'VAKRANGEE', 'VERANDA', 'VISHNU', 'WELENT', 'WOCKPHARMA', '3IINFOLTD', '63MOONS', 'ADSL', 'AGSTRA', 'AHL', 'AJMERA', 'APCL', 'APEX', 'APOLLO', 'ARIHANTCAP', 'ARIHANTSUP', 'ARTEMISMED', 'ASIANTILES', 'AWHCL', 'AXITA', 'BBTCL', 'BCLIND', 'BHAGERIA', 'BHARATWIRE', 'BIGBLOC', 'BLISSGVS', 'BLKASHYAP', 'BODALCHEM', 'CAPACITE', 'CENTRUM', 'CHEMCON', 'CLSEL', 'COFFEEDAY', 'CONSOFINVT', 'CREST', 'CSLFINANCE', 'DCMSRIND', 'DEEPINDS', 'DHANBANK', 'DHARMAJ', 'DIGISPICE', 'DLINKINDIA', 'DMCC', 'DPSCLTD', 'DVL', 'EKC', 'ELIN', 'EMAMIPAP', 'ENIL', 'ESTER', 'EXXARO', 'FCSSOFT', 'FOODSIN', 'GANESHBE', 'GENUSPAPER', 'GEOJITFSL', 'GEPIL', 'GFLLIMITED', 'GICHSGFIN', 'GIPCL', 'GREENPOWER', 'GULPOLY', 'HARDWYN', 'HCL-INSYS', 'HERCULES', 'HEXATRADEX', 'HIMATSEIDE', 'HITECH', 'HITECHGEAR', 'HLVLTD', 'HPL', 'HTMEDIA', 'INDIANHUME', 'INDOAMIN', 'JAGSNPHARM', 'JAYAGROGN', 'JAYBARMARU', 'KAMDHENU', 'KANORICHEM', 'KELLTONTEC', 'KHAICHEM', 'KITEX', 'KOKUYOCMLN', 'KOPRAN', 'KRISHANA', 'KUANTUM', 'LIBERTSHOE', 'LIKHITHA', 'MADRASFERT', 'MANAKSIA', 'MANGCHEFER', 'MANINDS', 'MEDICO', 'MENONBE', 'MUNJALAU', 'NAHARCAP', 'NAHARPOLY', 'NAHARSPING', 'NAVKARCORP', 'NCLIND', 'NECLIFE', 'NELCAST', 'NITINSPIN', 'NRAIL', 'NRL', 'NURECA', 'ONMOBILE', 'ORIENTHOT', 'ORIENTPPR', 'OSWALAGRO', 'PANACEABIO', 'PARAGMILK', 'PATELENG', 'PENIND', 'PFS', 'PLASTIBLEN', 'PNBGILTS', 'PRECAM', 'PRECWIRE', 'QUICKHEAL', 'RADIOCITY', 'RAMAPHO', 'RAMCOSYS', 'RAMRAT', 'RGL', 'RICOAUTO', 'ROHLTD', 'ROTO', 'RSWM', 'RUBYMILLS', 'RUSHIL', 'SAKSOFT', 'SANGAMIND', 'SATIA', 'SATIN', 'SATINDLTD', 'SCHAND', 'SCPL', 'SDBL', 'SHALPAINTS', 'SHEMAROO', 'SHREDIGCEM', 'SHREEPUSHK', 'SHREYAS', 'SHRIRAMPPS', 'SHYAMCENT', 'SIGACHI', 'SKIPPER', 'SMCGLOBAL', 'SMSPHARMA', 'SNOWMAN', 'SPECIALITY', 'SPENCERS', 'SREEL', 'STCINDIA', 'STEELXIND', 'STERTOOLS', 'SURYODAY', 'SUTLEJTEX', 'SYNCOMF', 'TAJGVK', 'TALBROAUTO', 'TARC', 'TBZ', 'TEXINFRA', 'TFCILTD', 'THEMISMED', 'TNPETRO', 'TRACXN', 'TRIL', 'TVSELECT', 'UGARSUGAR', 'UGROCAP', 'UNIDT', 'UNIENTER', 'URJA', 'VASCONEQ', 'VIKASLIFE', 'VISAKAIND', 'VLSFINANCE', 'VSSL', 'WINDLAS', 'XCHANGING', 'ZEEMEDIA', 'ZIMLAB', 'ZUARI', 'AARVI', 'ACCURACY', 'ADVANIHOTR', 'AHLEAST', 'AKSHARCHEM', 'ALMONDZ', 'ARIES', 'ARSHIYA', 'ASAHISONG', 'ASHIMASYN', 'ASIANENE', 'ASPINWALL', 'AURUM', 'AYMSYNTEX', 'BALAJITELE', 'BANSWRAS', 'BASML', 'BGRENERGY', 'BHARATGEAR', 'BIL', 'BIRLACABLE', 'BIRLAMONEY', 'BRNL', 'BSL', 'CAREERP', 'CHEMFAB', 'CLEDUCATE', 'COASTCORP', 'CYBERTECH', 'DCMNVL', 'DEEPENR', 'DELPHIFX', 'DEVIT', 'DONEAR', 'DTIL', 'DUCON', 'DYNPRO', 'EIFFL', 'EMAMIREAL', 'EMKAY', 'EROSMEDIA', 'FOCUS', 'GEECEE', 'GINNIFILA', 'GLOBAL', 'GOKUL', 'GSS', 'GUJAPOLLO', 'HARRMALAYA', 'HINDMOTORS', 'HITECHCORP', 'HMVL', 'HUBTOWN', 'INDOBORAX', 'INDOTHAI', 'INDSWFTLAB', 'INDTERRAIN', 'INSPIRISYS', 'INTLCONV', 'INVENTURE', 'IRISDOREME', 'ISFT', 'IVC', 'JAYSREETEA', 'KAMATHOTEL', 'KANPRPLA', 'KAYA', 'KECL', 'KMSUGAR', 'KOHINOOR', 'KOTHARIPET', 'KOTHARIPRO', 'KREBSBIO', 'KRITI', 'LGBFORGE', 'LOKESHMACH', 'LOVABLE', 'LYKALABS', 'MAANALU', 'MAHAPEXLTD', 'MAHEPC', 'MAHESHWARI', 'MANAKSTEEL', 'MANGALAM', 'MANORG', 'MARALOVER', 'MAWANASUG', 'MAXIND', 'MBLINFRA', 'MCLEODRUSS', 'MEGASTAR', 'MEP', 'MGEL', 'MHLXMIRU', 'MINDTECK', 'MMP', 'MODISONLTD', 'MOLDTECH', 'MUNJALSHOW', 'MUTHOOTCAP', 'NAHARINDUS', 'NATHBIOGEN', 'NDL', 'NITCO', 'ORBTEXP', 'ORICONENT', 'OSIAHYPER', 'OSWALSEEDS', 'PALREDTEC', 'PAR', 'PASUPTAC', 'PAVNAIND', 'PDMJEPAPER', 'PENINLAND', 'PILITA', 'PODDARMENT', 'PPAP', 'PPL', 'PRECOT', 'PRIMESECU', 'PTL', 'RADHIKAJWE', 'RAJTV', 'RAMANEWS', 'RANASUG', 'REPL', 'RITCO', 'RPPL', 'RUCHIRA', 'SAKAR', 'SAKHTISUG', 'SALZERELEC', 'SARLAPOLY', 'SBC', 'SECURKLOUD', 'SILINV', 'SINTERCOM', 'SMLT', 'SPLIL', 'STARPAPER', 'STEL', 'SUPERHOUSE', 'TAKE', 'THEINVEST', 'TOTAL', 'TPLPLASTEH', 'TRF', 'TRIGYN', 'TTL', 'UNITEDPOLY', 'VARDHACRLC', 'VENUSREM', 'VERTOZ', 'VETO', 'VIPCLOTHNG', 'VIPULLTD', 'VISHWARAJ', 'WEBELSOLAR', 'XELPMOC', 'ZODIACLOTH', 'ZUARIIND', 'AAATECH', 'AAKASH', 'AARON', 'AARVEEDEN', 'ACEINTEG', 'AGROPHOS', 'AHLADA', 'AJOONI', 'AKASH', 'AKG', 'AKSHAR', 'ALANKIT', 'ALKALI', 'ALPA', 'ALPHAGEO', 'AMDIND', 'AMJLAND', 'ANIKINDS', 'ANMOL', 'ARCHIES', 'ARTNIRMAN', 'ARVEE', 'ASIANHOTNR', 'ATLANTA', 'AVG', 'AVROIND', 'BALPHARMA', 'BANARBEADS', 'BANG', 'BANKA', 'BIOFILCHEM', 'BLBLIMITED', 'BTML', 'BYKE', 'CAPTRUST', 'COMPUSOFT', 'CORALFINAC', 'CORDSCABLE', 'CTE', 'CUBEXTUB', 'DAMODARIND', 'DCM', 'DGCONTENT', 'DHRUV', 'DJML', 'EMMBI', 'ENERGYDEV', 'FIBERWEB', 'GANGESSECU', 'GILLANDERS', 'GLOBALVECT', 'HECPROJECT', 'HILTON', 'HOVS', 'INDIANCARD', 'INTENTECH', 'IRIS', 'IVP', 'JAIPURKURT', 'JHS', 'JMA', 'JOCIL', 'KAKATCEM', 'KANANIIND', 'KAPSTON', 'KBCGLOBAL', 'KHANDSE', 'LAGNAM', 'LAMBODHARA', 'LASA', 'LATTEYS', 'LOTUSEYE', 'MAHASTEEL', 'MALUPAPER', 'MANAKALUCO', 'MCL', 'MITCON', 'MORARJEE', 'MRO-TEK', 'NAGREEKEXP', 'NECCLTD', 'NGIL', 'NIBL', 'NILASPACES', 'OBCL', 'OMAXAUTO', 'ORIENTLTD', 'PALASHSECU', 'PNC', 'PRITI', 'RANEENGINE', 'RELCHEMQ', 'RKEC', 'ROML', 'SALONA', 'SALSTEEL', 'SECURCRED', 'SHIVAMILLS', 'SHIVATEX', 'SHRADHA', 'SHRENIK', 'SIKKO', 'SIMBHALS', 'SMARTLINK', 'STARTECK', 'STEELCITY', 'SUMIT', 'SURANASOL', 'SURANAT&P', 'SURYALAXMI', 'SUVIDHAA', 'TAINWALCHM', 'TARMAT', 'TEMBO', 'TERASOFT', 'TEXMOPIPES', 'TOKYOPLAST', 'TREEHOUSE', 'UMAEXPORTS', 'UMANGDAIRY', 'UNITEDTEA', 'URAVI', 'VAISHALI', 'VINEETLAB', 'WEIZMANIND', 'WORTH', '21STCENMGM', '3PLAND', 'ALPSINDUS', 'BALKRISHNA', 'BURNPUR', 'CALSOFT', 'COUNCODOS', 'CREATIVEYE', 'CROWN', 'GAYAHWS', 'GLFL', 'HBSL', 'HEADSUP', 'JETFREIGHT', 'KARMAENG', 'KAVVERITEL', 'KHAITANLTD', 'LAXMICOT', 'LCCINFOTEC', 'LFIC', 'LIBAS', 'LYPSAGEMS', 'MADHAV', 'MADHUCON', 'MARSHALL', 'MITTAL', 'MOHITIND', 'NAGREEKCAP', 'NARMADA', 'ONELIFECAP', 'ORIENTALTL', 'ORTINLAB', 'PEARLPOLY', 'SAGARDEEP', 'SANGINITA', 'SHANTI', 'SHYAMTEL', 'SILGO', 'SILLYMONKS', 'TFL', 'TGBHOTELS', 'TIJARIA', 'TIMESGTY', 'VCL', 'VIVIDHA', 'WILLAMAGOR', 'ZENITHEXPO']
# since 1m data were irregular like 9:15 followed by 10:12 so all the stocks were loaded together
stock_list_df = yf.download(tickers=[f"{st}.NS" for st in stocks_list], period='1wk', interval='1m', progress=True)['Close']
stock_list_df.index = pd.to_datetime(stock_list_df.index)
stock_list_df = stock_list_df.loc["2023-11-16":]
stock_list_df = stock_list_df.bfill().ffill().dropna(axis=1)
print(stock_list_df)
stocks_counter = 0  # index as counter
stocks_df = stock_list_df.copy()  # here key is symbol name and value is one day price data


@app.route("/price")
def get_price():
    global stock_list_df, stock_df, stock_counter
    if 'symbol' in request.args.keys():
        symbol = str(request.args['symbol']).upper()

        if symbol not in stock_df.keys():
            # if DATA_FROM_FILE:
            #     for file in os.listdir():
            #         if 'csv' in file and symbol in file:
            #             stock_counter[file.rsplit('.', 1)[0]] = -1
            #             stock_df[file.rsplit('.', 1)[0]] = pd.read_csv(file)
            # else:
            #     t = yf.download(tickers=f"{symbol}.NS", period='1wk', interval='1m')[['Close']]
            #     t = t.bfill().ffill()
            #     t.columns = ['price']
            #     stock_df[symbol] = t.loc[date]
            #     stock_counter[symbol] = -1

            t = stock_list_df[[f"{symbol}.NS"]]
            t.columns = ['price']
            stock_df[symbol] = t.loc[date]
            stock_counter[symbol] = -1



        try:
            if symbol in stock_counter.keys():
                stock_counter[symbol] += 1
                return {'data': stock_df[symbol].price.iloc[stock_counter[symbol]]}
        except IndexError:

            return {'data': 'ENDED'}
        else:
            return {"msg": "Wrong symbol provided"}

    return {'msg': 'does not contain symbol as key'}


@app.route("/prices")
def get_prices():
    global stocks_df, stocks_counter
    try:
        one_row: pd.Series = stocks_df.iloc[stocks_counter]
        stocks_counter += 1
    except IndexError:
        return {'data': 'ENDED'}
    return {'data': one_row.to_dict()}


if __name__ == '__main__':
    app.run(port=8082)
